<tool id="fls_fastq_screen" name="FastQ Screen" version="0.1.5">
  <description>Check for contaminants in your sample</description>
  <command interpreter="bash">fastq_screen.sh
  #if $input.extension.startswith( "fastqcs" ):
     ##if extension starts with fastqcs, then we have a color space file
     --color
  #end if
  #if (str($subset) and int(str($subset)) > 0):
     --subset $subset
  #end if
  $input $conf_file $screen_txt $screen_png</command>
  <requirements>
    <requirement type="package" version="0.3.1">fastq_screen</requirement>
  </requirements>
  <inputs>
    <param name="input" type="data" format="fastqsanger,fastqcssanger" label="FASTQ file" help="Sequences can be either Illumina (Sanger) or SOLiD (colorspace) format" />
    <param name="conf_file" type="select" label="FastQ Screen conf file" help="Select a conf file with a specific set of bowtie indexes to screen against" >
      <options from_data_table="fastq_screen">
	<!--
        <filter type="multiple_splitter" column="1" separator=","/>
        <filter type="param_value" column="1" ref="input" ref_attribute="extension"/>
	<filter type="sort_by" column="0"/>
	-->
        <validator type="no_options" message="No indexes are available for the selected input dataset"/>
      </options>
    </param>
    <param name="subset" type="integer" label="Use a subset of reads" value="100000" optional="true" help="Specify a number of reads to search, or leave blank to use all reads (--subset)" />
  </inputs>
  <outputs>
    <data format="txt" name="screen_txt" label="${tool.name} against ${conf_file.fields.name} on ${on_string}: report" />
    <data format="png" name="screen_png" label="${tool.name} against ${conf_file.fields.name} on ${on_string}: plot" />
  </outputs>
  <tests>
    <test>
      <param name="input" value="fastq_screen_in.fastq" />
      <param name="conf_file" value="fastq_screen_in.conf" />
      <output name="screen_txt" file="fastq_screen_out.txt" />
      <output name="screen_png" file="fastq_screen_out.png" compare="sim_size" />
    </test>
  </tests>
  <help>
.. class:: infomark

**What it does**

fastq_screen maps a set of reads from a FASTQ file sequence dataset against a set of
bowtie indexes for different organisms, and should be run as part of a QC pipeline.

It works with both Illumina (i.e. Sanger formatted) and SOLiD (i.e. colorspace) data;
note that the available screen sets may vary depending on the format of the input
FASTQ file.

fastq_screen reports the percentage of mapped reads against each index as both a textual
table and as a plot (in PNG format), giving an indication of how much of each organism
is present in the sample and revealing sources of contamination.

-------------

.. class:: infomark

**Options**

It is recommended to use just a subset of reads in the search, in order to speed up the
screening for large datasets. To use all reads, leave the subset size blank.

(Note that if the fastq_screen decides that the subset is too small, or if the specified
subset exceeds the number of reads in the input dataset, then the value will be
over-ridden).

-------------

.. class:: infomark

**Credits**

This Galaxy tool has been developed within the Bioinformatics Core Facility at the
University of Manchester. It runs the fastq_screen package which has been developed by
the Bioinformatics Group at the Babraham Institute and is documented
at http://www.bioinformatics.babraham.ac.uk/projects/fastq_screen/.

Please kindly acknowledge both this Galaxy tool and fastq_screen package if you use it.
  </help>
</tool>
