<tool id="rnachipintegrator_canonical_genes" name="Analyse canonical genes against ChIP data" version="@VERSION@-0">
  <description>using RnaChipIntegrator</description>
  <macros>
    <import>rnachipintegrator_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <expand macro="version_command" />
  <command interpreter="bash"><![CDATA[
  rnachipintegrator_wrapper.sh
  #if $peaks_in.metadata.chromCol
    --peak_cols=${peaks_in.metadata.chromCol},${peaks_in.metadata.startCol},${peaks_in.metadata.endCol}
  #end if
  #if str( $cutoff ) != ""
    --cutoff=$cutoff
  #end if
  #if str( $number ) != ""
    --number=$number
  #end if
  #if (str( $promoter_start ) != "" and str( $promoter_end ))
    --promoter_region=$promoter_start,$promoter_end
  #end if
  --edge=$edge
  --feature=$feature_type
  $pad_output
  --xls_file "$xls_out"
  #if $results_as_zip
    --zip_file "$zip_file"
  #else
    --output_files "$peaks_per_feature_out" "$features_per_peak_out"
    #if str( $output_format ) == "full"
      --summary_files "$peaks_per_feature_summary" "$features_per_peak_summary"
    #else
      --compact
    #end if
  #end if
  "${canonical_genes.fields.path}" "$peaks_in"
  ]]></command>
  <inputs>
    <param format="tabular" name="peaks_in" type="data" label="Peaks" />
    <param name="canonical_genes" type="select" label="Canonical genes to analyse ChIP peaks against">
      <options from_data_table="rnachipintegrator_canonical_genes">
      </options>
    </param>
    <expand macro="analysis_options" />
    <expand macro="output_options" />
  </inputs>
  <outputs>
    <!-- Always produce XLS output -->
    <data format="xls" name="xls_out"
	  label="All RnaChipIntegrator analyses: ${canonical_genes.fields.name} vs ${peaks_in.name} (Excel spreadsheet)" />
    <!-- Outputs if no zip requested -->
    <data format="tabular" name="peaks_per_feature_out"
	  label="Nearest peaks to each feature: ${canonical_genes.fields.name} vs ${peaks_in.name}" >
      <filter>results_as_zip is False</filter>
    </data>
    <data format="tabular" name="features_per_peak_out"
	  label="Nearest features to each peak: ${canonical_genes.fields.name} vs ${peaks_in.name}" >
      <filter>results_as_zip is False</filter>
    </data>
    <data format="tabular" name="peaks_per_feature_summary"
	  label="Nearest peaks to each feature (summary): ${canonical_genes.fields.name} vs ${peaks_in.name}" >
      <filter>results_as_zip is False</filter>
      <filter>output_format == "full"</filter>
    </data>
    <data format="tabular" name="features_per_peak_summary"
	  label="Nearest features to each peak (summary): ${canonical_genes.fields.name} vs ${peaks_in.name}" >
      <filter>results_as_zip is False</filter>
      <filter>output_format == "full"</filter>
    </data>
    <!-- All outputs in a ZIP file -->
    <data format="zip" name="zip_file"
	  label="All tab-delimited files for ${canonical_genes.fields.name} vs ${peaks_in.name} (zip file)" >
      <filter>results_as_zip is True</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <param name="chipseq" value="mm9_summits.txt" />
      <param name="canonical_genes" value="mm9_test" />
      <param name="peak_type" value="summits" />
      <param name="window" value="50000" />
      <param name="cutoff" value="130000" />
      <output name="xls_output" file="mm9_summits.xls" compare="sim_size" />
      <output name="peaks_to_transcripts_out" file="mm9_summits_to_transcripts.out" ftype="tabular" />
      <output name="tss_to_summits_out" file="mm9_tss_to_summits.out" ftype="tabular" />
    </test>
    <test>
      <param name="chipseq" value="mm9_peaks.txt" />
      <param name="canonical_genes" value="mm9_test" />
      <param name="peak_type" value="regions" />
      <param name="edge_cutoff" value="50000" />
      <output name="xls_output" file="mm9_peaks.xls" compare="sim_size" />
      <output name="transcripts_to_edges_out" file="mm9_transcripts_to_edges.out" ftype="tabular" />
      <output name="transcripts_to_edges_summary" file="mm9_transcripts_to_edges.summary" ftype="tabular" />
      <output name="tss_to_edges_out" file="mm9_tss_to_edges.out" ftype="tabular" />
      <output name="tss_to_edges_summary" file="mm9_tss_to_edges.summary" ftype="tabular" />
    </test>
  </tests>
  <help>

.. class:: infomark

**What it does**

Performs integrated analyses of a set of peaks (e.g. ChIP data) against a
list of "canonical genes" for a specific organism and genome build,
identifying the nearest peaks to each canonical gene (and vice versa).

RnaChipIntgerator can be obtained from
http://fls-bioinformatics-core.github.com/RnaChipIntegrator/

-------------

.. class:: infomark

**Input**

The peak data must be in a tabular file with at least 3 columns of data
for each peak (one peak per line):

====== ========== ======================================================================
Column Name       Description
====== ========== ======================================================================
     1 chr        Chromosome name (must match one of those in expression data file)
     2 start      Start position of the peak 
     3 end        End position of the peak (start + 1 for summit data)
====== ========== ======================================================================

-------------

.. class:: infomark

**Output**

The outputs from this tool vary depending on the type of ChIP data that is input (i.e
summits or peaks), however generally there is one tab-delimited results file for each
analysis described above in the **What it does** section (some analyses output a second
file with just the "best" hits).

A history item will be generated for each output file, unless the option to put them
into a single zip archive is selected; this archive file will have to be downloaded
and unzipped on your local machine. It is recommended that you refer to the
RnaChipIntegrator documentation for information on the contents of each output file:
https://github.com/fls-bioinformatics-core/RnaChipIntegrator/blob/master/doc/MANUAL.markdown

In addition an Excel spreadsheet (with one page for each analysis performed) is always
produced.

-------------

.. class:: infomark

**Credits**

This Galaxy tool has been developed within the Bioinformatics Core Facility at the
University of Manchester. It runs the RnaChipIntegrator package which has also been
developed by this group, and is documented at
http://fls-bioinformatics-core.github.com/RnaChipIntegrator/

Please kindly acknowledge the Bioinformatics Core Facility if you use this tool.
  </help>
  <expand macro="citations" />
</tool>
